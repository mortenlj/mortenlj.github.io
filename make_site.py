#!/usr/bin/python
# -*- coding: utf-8 -*-
"""Things to do after a commit to the webrepo.

This script is run by the commit-hook.
"""

import os
import time
from urllib.parse import quote

rst2html = "rst2html -g -d -t -s --initial-header-level=2 --stylesheet=\"/site.css\" --link-stylesheet %s %s"


def make_html():
    needs_index = []
    for root, dirs, files in os.walk("."):
        rst_files = [f for f in files if f.endswith(".rst")]
        if "index.rst" not in rst_files and len(rst_files) > 0:
            needs_index.append(root)
        for f in rst_files:
            oldname = os.path.join(root, f)
            name, ext = os.path.splitext(oldname)
            if ext == ".rst":
                newname = name + ".html"
                generate(oldname, newname)
    return needs_index


def generate(oldname, newname):
    cmd = rst2html % (oldname, newname)
    print("Running command: %s" % cmd)
    os.system(cmd)


TEMPLATE = """
%s
%s

%s

.. Autogenerated at %s
"""


def extract_title(filename):
    f = open(filename, "r")
    for line in f:
        if line.startswith("<title>"):
            return line[7:-9]


TEXTLINE = "* `%s`_"
LINKLINE = ".. _`%s`: %s"


def files_to_list(files):
    texts = list()
    links = list()
    files.sort()
    for title, filename in files:
        texts.append(TEXTLINE % title)
        links.append(LINKLINE % (title, quote(filename)))
    return "%s\n\n%s\n" % ("\n".join(texts), "\n".join(links))


def make_index(directory):
    files = list()
    indexfile = os.path.join(directory, "index.rst")
    for f in os.listdir(directory):
        name, ext = os.path.splitext(f)
        if ext == ".html" and not name == "index":
            files.append((extract_title(os.path.join(directory, f)), f))
    if len(files) > 0:
        index = open(indexfile, "w")
        title = "Documents in %s" % directory.title()
        text = TEMPLATE % (title, "=" * len(title),
                           files_to_list(files),
                           time.asctime())
        index.write(text)
        index.close()
        name, ext = os.path.splitext(indexfile)
        newname = name + ".html"
        generate(indexfile, newname)


if __name__ == "__main__":
    index_dirs = make_html()
    for d in index_dirs:
        make_index(d)
